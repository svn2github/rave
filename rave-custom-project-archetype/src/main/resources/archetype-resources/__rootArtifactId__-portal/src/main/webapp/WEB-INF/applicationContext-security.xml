#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->

<!--
  This security file uses the default spring simple form login
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

   <security:http auto-config="true" use-expressions="true" disable-url-rewriting="true">
     <security:intercept-url pattern="/static/**" access="permitAll"/>
     <security:intercept-url pattern="/login" access="permitAll"/>
     <security:intercept-url pattern="/newaccount.jsp*" access="permitAll"/>
     <security:intercept-url pattern="/app/newaccount*" access="permitAll"/>
     <security:intercept-url pattern="/app/newpassword/**" access="permitAll"/>
     <security:intercept-url pattern="/app/retrieveusername/**" access="permitAll"/>
     <security:intercept-url pattern="/app/changepassword/**" access="permitAll"/>
     <security:intercept-url pattern="/app/messagebundle/*.js" access="permitAll"/>
     <security:intercept-url pattern="/app/admin/**" access="hasRole('ROLE_ADMIN')"/>    <!-- all urls must be authenticated -->
    <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>


    <!-- Set the user service ref here to the implementation you want to use.  The name is
       defined in the @Service annotation of the corresponding service source code.
    -->
       <security:openid-login user-service-ref="customUserService" authentication-failure-handler-ref="openIdAuthFailureHandler">
           <security:attribute-exchange identifier-match="https://www.google.com.*">
               <security:openid-attribute name="email" type="http://axschema.org/contact/email" required="true" count="1"/>
               <security:openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true"/>
               <security:openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true"/>
           </security:attribute-exchange>
           <security:attribute-exchange identifier-match=".*openid-provider.appspot.com.*">
               <security:openid-attribute name="email" type="http://axschema.org/contact/email" required="true" count="1"/>
               <security:openid-attribute name="firstname" type="http://axschema.org/namePerson/first" required="true"/>
               <security:openid-attribute name="lastname" type="http://axschema.org/namePerson/last" required="true"/>
           </security:attribute-exchange>
           <security:attribute-exchange identifier-match=".*yahoo.com.*">
               <security:openid-attribute name="email" type="http://axschema.org/contact/email" required="true"/>
               <security:openid-attribute name="fullname" type="http://axschema.org/namePerson" required="true"/>
           </security:attribute-exchange>
           <security:attribute-exchange identifier-match=".*myopenid.com.*">
               <security:openid-attribute name="email" type="http://schema.openid.net/contact/email" required="true" count="1"/>
               <security:openid-attribute name="fullname" type="http://schema.openid.net/namePerson" required="true"/>
           </security:attribute-exchange>
       </security:openid-login>
     <security:form-login login-page="/login" default-target-url="/" authentication-failure-url="/login?authfail=form" />
    <security:logout/>
  </security:http>

    <security:authentication-manager>
    <!-- Set the user service ref here to the implementation you want to use.  The name is
       defined in the @Service annotation of the corresponding service source code.
    -->
        <security:authentication-provider user-service-ref="customUserService">
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
    <!-- No LDAP authentication in this custom project -->
    </security:authentication-manager>

    <bean id="openIdAuthFailureHandler" class="org.apache.rave.portal.web.controller.handler.OpenIDAuthenticationFailureHandler">
        <property name="defaultFailureUrl" value="/login?authfail=openid"/>
    </bean>

    <!-- enable the spring security annotations -->
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>
     <!-- override the default permissionEvaluator bean used by Spring Security with our custom RavePermissionEvaluator -->
    <bean id="expressionHandler" class="org.apache.rave.portal.security.impl.RaveMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="ravePermissionEvaluator" />
    </bean>

    <!-- Need to define customUserService because its package is not scanned automatically -->
    <bean id="customUserService" class="${package}.CustomUserService"/>

</beans>
