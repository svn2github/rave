<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.

  $Id:$
-->
<Module>
    <ModulePrefs title="Actions Contributions Example" author="Rave Project" author_email="dev@rave.apache.org" height="" description="Simple example of how to leverage container actions">
        <Require feature="dynamic-height" />
        <Require feature="actions" />
        <Require feature="setprefs" />
    </ModulePrefs>

    <Content type="html" view="home">
       <![CDATA[
          <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.0/css/bootstrap.min.css" />
          <script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.0.0/handlebars.min.js"></script>
          <script type="text/x-handlebars-template" id="template">
            {{#each_entry this}}
                <h3>{{key}}</h3>
                <ul>
                {{#each value}}<li><b>{{id}}:</b><span>{{description}}</span></li>{{/each}}
                </ul>
            {{/each_entry}}
          </script>
          <div id="render"></div>
          <script>
              Handlebars.registerHelper("each_entry", function(obj, options) {
                var buffer = "", key;
                for (key in obj) { if (obj.hasOwnProperty(key)) buffer += options.fn({key: key, value: obj[key]}); }
                return buffer;
              });
              var template = Handlebars.compile(document.getElementById("template").innerHTML);
              var elem = document.getElementById("render");

              function actionCallback(args) {
                alert("Action called: " + args);
              }

              var moduleId = (new gadgets.Prefs()).getModuleId();

              var actions = {};

              var warning = {
                    id: "org.apache.rave.gadget." + moduleId + ".toolbarAction.warning",
                    tooltip: "This is a warning",
                    label: "Take Warning",
                    icon: "css:icon-warning-sign",
                    callback: actionCallback,
                    path: "/gadget/toolbar",
                    moduleId: moduleId,
                    description: "Toolbar action as an image that when clicked fires the action"
                };
              actions[warning.path] = [warning];
              gadgets.actions.addAction(warning);

              var open = {
                    id: "org.apache.rave.gadget." + moduleId + ".toolbarAction.open",
                    tooltip: "This is a folder open",
                    label: "Open File",
                    icon: "css:icon-folder-open",
                    callback: actionCallback,
                    path: "/gadget/toolbar",
                    moduleId: moduleId,
                    description: "Toolbar action as an image that when clicked fires the action"
                };
              actions[open.path].push(open);
              gadgets.actions.addAction(open);
              elem.innerHTML = template(actions);
              gadgets.util.registerOnLoadHandler(gadgets.window.adjustHeight);
          </script>
       ]]>
    </Content>
</Module>

