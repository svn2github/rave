<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- make the the portal.properties props available to autowire injectors, location of the properties can
be overridden by setting a system property "portal.override.properties" -->
    <bean id="portalPropertyPlaceholder" class="org.apache.rave.util.OverridablePropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="systemPropertyName" value="portal.override.properties"/>
        <property name="location" value="classpath:portal.properties"/>
    </bean>

    <!-- bean post-processor for JPA annotations -->
    <context:annotation-config/>

    <!-- enable the use of the @AspectJ style of Spring AOP -->
    <aop:aspectj-autoproxy/>

    <!-- rave-common component base-package scan (maybe move to a separate common-applicationContext.xml?) -->
    <context:component-scan base-package="org.apache.rave.service"/>
    <context:component-scan base-package="org.apache.rave.synchronization"/>

    <!-- rave-core component base-package scan -->
    <context:component-scan base-package="org.apache.rave.portal.model"/>
    <context:component-scan base-package="org.apache.rave.portal.repository"/>

    <!-- Password encoding -->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder">
        <!--<constructor-arg index="0" value="10"/>-->
    </bean>

    <!-- email settings -->
    <bean id="emailServiceMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${portal.mail.sender}"/>
        <property name="replyTo" value="${portal.mail.replyto}"/>
    </bean>

    <bean id="freemarkerMailConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="/WEB-INF/mailtemplates"/>
    </bean>
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${portal.mail.host}"/>
        <property name="password" value="${portal.mail.password}"/>
        <property name="username" value="${portal.mail.username}"/>
        <property name="port" value="${portal.mail.port}"/>
        <property name="protocol" value="${portal.mail.protocol}"/>
        <!-- NOTE: if using Gmail, you'll need following properties-->
        <!--<property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.timeout">8500</prop>
            </props>
        </property>-->
    </bean>
    <!--
    NOTE: to use mail session you'll need to configure following within catalina_home/conf/context.xml
    <Resource name="mail/Session" auth="Container" type="javax.mail.Session" mail.smtp.host="my.mail.host"/>

    Further, activation & mail jars needs to be placed within catalina_home/lib folder
    -->
    <!--
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="session" ref="mailSession"/>
    </bean>
    <bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/mail/Session"/>
    </bean>
    -->

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

    <bean id="staticContentCache" class="org.apache.rave.service.impl.DefaultStaticContentFetcherService">
        <constructor-arg ref="restTemplate"/>
        <constructor-arg>
            <list>
                <!-- example of a Static Content source that doesn't have any string token placeholders in its content body
                <bean class="org.apache.rave.model.StaticContent">
                    <constructor-arg index="0" value="standardCompanyHeader"/>
                    <constructor-arg index="1" value="${company.header.host}/content/standard_header.html"/>
                    <constructor-arg index="2">
                        <null/>
                    </constructor-arg>
                </bean>
                -->
                <!-- example of a Static Content source that has string token placeholders
                <bean class="org.apache.rave.model.StaticContent">
                    <constructor-arg index="0" value="environmentSpecificContent"/>
                    <constructor-arg index="1" value="${company.header.host}/content/footer.html"/>
                    <constructor-arg index="2">
                        <map>
                            <entry key="\{supportEmail\}" value="${raveproperty.supportemail}"/>
                            <entry key="\{productVersion\}" value="${raveproperty.version}"/>
                        </map>
                    </constructor-arg>
                </bean>
                -->
            </list>
        </constructor-arg>
    </bean>

    <!-- example on how to setup a Spring Timer to refresh the Static Content cache at a fixed interval
    <bean id="refreshStaticContentCacheScheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
        <property name="delay" value="5000"/>
        <property name="period" value="300000"/>
        <property name="timerTask">
            <bean class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean"
                  p:targetObject-ref="staticContentCache" p:targetMethod="refreshAll"/>
        </property>
    </bean>
    <bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
        <property name="daemon" value="true"/>
        <property name="scheduledTimerTasks">
            <list>
                <ref local="refreshStaticContentCacheScheduledTask"/>
            </list>
        </property>
    </bean>
    -->

    <import resource="classpath*:org/apache/rave/core-applicationContext.xml"/>
    <import resource="classpath*:org/apache/rave/web-applicationContext.xml"/>
    <import resource="cxf-applicationContext.xml"/>
    <import resource="classpath*:org/apache/rave/opensocial-provider-applicationContext.xml"/>
    <import resource="classpath*:org/apache/rave/w3c-provider-applicationContext.xml"/>

    <!-- Configuring messages.properties file -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basename="messages" />

    <util:properties id="messages" location="classpath:messages.properties" />


</beans>